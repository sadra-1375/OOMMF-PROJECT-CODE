# MIF 2.1
# MIF Example File: ManyRectangularCubes.mif
# Description: Simulation of an array of RECTANGULAR PARTICLES.
# Unit for anisotropies are m^3 
set pi [expr {4*atan(1.0)}]
set mu0 [expr {4*$pi*1e-7}]

RandomSeed 1

# Geometric parameters
Parameter length          10e-6 ;# meters
Parameter width           10e-6
Parameter height          10e-9
Parameter spacing         1e-6
Parameter cellwitdh       10e-9 ;# meters
Parameter cellsize        5e-6 

# Magnetic parameters

Parameter Hext             #add Value here ;# T
Parameter ms               8e5
proc LShapeGrid {x y z} {
    global length width height spacing 

    # Determine position relative to grid
    set x [expr {fmod(abs($x),$spacing)}]
    set y [expr {fmod(abs($y),$spacing)}]
    set z [expr {fmod(abs($z),$spacing)}]

    set xm [expr {$length/2}]
    set ym [expr {$width/2}]
    set zm [expr {$height/2}]

    if {$x <= $xm && $y <= $ym && $z <= $zm} {
        return 1
    } elseif {$x > $xm && $x <= $xm + $width && $y > $ym && $y <= $ym + $length && $z <= $zm} {
        return 1
    } else {
        return 0
    }
}

Specify Oxs_ScriptAtlas:atlas [subst {
  xrange {0 [expr {6*$length+5*$spacing}]}
  yrange {0 [expr {6*$width+5*$spacing}]}
  zrange {0 $height}
  regions {region1 region2 region3}
  script LShapeGrid
  script_args rawpt
}]

Specify Oxs_RectangularMesh:mesh [subst {
  cellsize {$cellsize $cellsize $cellwitdh}
  atlas :atlas
}]

Specify Oxs_UniaxialAnisotropy {
   K1  { Oxs_AtlasScalarField {
      atlas :atlas
      default_value 0
      values {
         region1   #add Value here
         region2   #add Value here
         region3 0
     
      }
   }}
   axis { Oxs_AtlasVectorField {
      atlas :atlas
      default_value {0 0 1}
      values {
         region1 {1 0 0}
         region2 {0 1 0}
         region3 {0 0 0}
      }
   }}
}

Specify Oxs_UniformExchange {
  A  1.18234E-11
}

Specify Oxs_UZeeman [subst {
  multiplier [expr {0.001/$mu0}]
  Hrange {
      { 0  0  0   0  $Hext  0   5 }
  }
}]

Specify Oxs_Demag {}

Specify Oxs_CGEvolve {}

Specify Oxs_MinDriver {
    basename rectangularcubes
    evolver Oxs_CGEvolve
    stopping_mxHxm 0.01
    mesh :mesh
     Ms { Oxs_AtlasScalarField {
        atlas :atlas
        default_value 0.0
        values {
            region1 #add Value here
            region2 #add Value here
            region3 0
        }
    }
 
}
    
    m0 { Oxs_AtlasVectorField {
        atlas :atlas
        default_value {0 0 1}
        values {
            region1 {1 0 0}
            region2 {0 1 0}
            region3 {0 0 0}
        }
    }}
   
}
